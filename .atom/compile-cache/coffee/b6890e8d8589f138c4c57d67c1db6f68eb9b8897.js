(function() {
  (function() {
    var vm, __slice_;
    vm = void 0;
    __slice_ = [].slice;
    vm = require("vm");
    exports.allowUnsafeEval = function(fn) {
      var previousEval;
      previousEval = void 0;
      previousEval = global["eval"];
      try {
        global["eval"] = function(source) {
          return vm.runInThisContext(source);
        };
        return fn();
      } finally {
        global["eval"] = previousEval;
      }
    };
    exports.allowUnsafeNewFunction = function(fn) {
      var previousFunction;
      previousFunction = void 0;
      previousFunction = global.Function;
      try {
        global.Function = exports.Function;
        return fn();
      } finally {
        global.Function = previousFunction;
      }
    };
    exports.allowUnsafe = function(fn) {
      var previousEval, previousFunction;
      previousEval = void 0;
      previousFunction = void 0;
      previousFunction = global.Function;
      previousEval = global["eval"];
      try {
        global.Function = exports.Function;
        global["eval"] = function(source) {
          return vm.runInThisContext(source);
        };
        return fn();
      } finally {
        global["eval"] = previousEval;
        global.Function = previousFunction;
      }
    };
    exports.Function = function() {
      var body, paramList, paramLists, params, _i, _j, _len;
      body = void 0;
      paramList = void 0;
      paramLists = void 0;
      params = void 0;
      _i = void 0;
      _j = void 0;
      _len = void 0;
      paramLists = (2 <= arguments.length ? __slice_.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []));
      body = arguments[_i++];
      params = [];
      _j = 0;
      _len = paramLists.length;
      while (_j < _len) {
        paramList = paramLists[_j];
        if (typeof paramList === "string") {
          paramList = paramList.split(/\s*,\s*/);
        }
        params.push.apply(params, paramList);
        _j++;
      }
      return vm.runInThisContext("(function(" + (params.join(", ")) + ") {\n  " + body + "\n})");
    };
  }).call(this);

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL1VzZXJzL21hcmNlbG5vZ3VlaXJhLy5hdG9tL3BhY2thZ2VzL2Jyb3dzZXItcGx1cy9saWIvZXZhbC5jb2ZmZWUiCiAgXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiQUFBQTtBQUFBLEVBQUEsQ0FBQyxTQUFBLEdBQUE7QUFDQSxRQUFBLFlBQUE7QUFBQSxJQUFBLEVBQUEsR0FBSyxNQUFMLENBQUE7QUFBQSxJQUNBLFFBQUEsR0FBVyxFQUFFLENBQUMsS0FEZCxDQUFBO0FBQUEsSUFFQSxFQUFBLEdBQUssT0FBQSxDQUFRLElBQVIsQ0FGTCxDQUFBO0FBQUEsSUFHQSxPQUFPLENBQUMsZUFBUixHQUEwQixTQUFDLEVBQUQsR0FBQTtBQUN6QixVQUFBLFlBQUE7QUFBQSxNQUFBLFlBQUEsR0FBZSxNQUFmLENBQUE7QUFBQSxNQUNBLFlBQUEsR0FBZSxNQUFPLENBQUEsTUFBQSxDQUR0QixDQUFBO0FBRUE7QUFDQyxRQUFBLE1BQU8sQ0FBQSxNQUFBLENBQVAsR0FBaUIsU0FBQyxNQUFELEdBQUE7aUJBQ2hCLEVBQUUsQ0FBQyxnQkFBSCxDQUFvQixNQUFwQixFQURnQjtRQUFBLENBQWpCLENBQUE7QUFHQSxlQUFPLEVBQUEsQ0FBQSxDQUFQLENBSkQ7T0FBQTtBQU1DLFFBQUEsTUFBTyxDQUFBLE1BQUEsQ0FBUCxHQUFpQixZQUFqQixDQU5EO09BSHlCO0lBQUEsQ0FIMUIsQ0FBQTtBQUFBLElBZUEsT0FBTyxDQUFDLHNCQUFSLEdBQWlDLFNBQUMsRUFBRCxHQUFBO0FBQ2hDLFVBQUEsZ0JBQUE7QUFBQSxNQUFBLGdCQUFBLEdBQW1CLE1BQW5CLENBQUE7QUFBQSxNQUNBLGdCQUFBLEdBQW1CLE1BQU0sQ0FBQyxRQUQxQixDQUFBO0FBRUE7QUFDQyxRQUFBLE1BQU0sQ0FBQyxRQUFQLEdBQWtCLE9BQU8sQ0FBQyxRQUExQixDQUFBO0FBQ0EsZUFBTyxFQUFB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

//# sourceURL=/Users/marcelnogueira/.atom/packages/browser-plus/lib/eval.coffee
